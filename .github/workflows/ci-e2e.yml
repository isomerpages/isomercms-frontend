name: ci-e2e

on:
  pull_request:
    branches: [master]
  workflow_dispatch:
    inputs:
      issueNumber:
        description: "The pull request number to build e2e tests on"
        required: true
        default: 1
        type: number

# Required for allowing PRs to master branch to be of highest priority
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  install:
    # NOTE: Netlify uses ubuntu 16.08 but Github Actions does not offer it by default.
    # Hence, we default to the latest version.
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          cache: "npm"
      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-
      - name: Install dependencies
        run: npm ci

  lint:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          cache: "npm"
      - name: Load Node.js modules
        uses: actions/cache@v3
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Run eslint fix
        run: npm run lint-fix
      - name: Run prettier fix
        run: npm run format-fix

  build:
    needs: lint
    runs-on: ubuntu-latest
    env:
      CI: false
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          cache: "npm"
      - name: Load Node.js modules
        uses: actions/cache@v3
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Run build
        run: npm run build

  test:
    needs: build
    runs-on: ubuntu-latest
    environment: staging
    env:
      CYPRESS_RECORD_KEY: ${{secrets.CYPRESS_RECORD_KEY}}
      CYPRESS_BASEURL: ${{secrets.CYPRESS_BASEURL}}
      CYPRESS_COOKIE_NAME: ${{secrets.CYPRESS_COOKIE_NAME}}
      CYPRESS_COOKIE_VALUE: ${{secrets.CYPRESS_COOKIE_VALUE}}
      CYPRESS_TEST_REPO_NAME: ${{secrets.CYPRESS_TEST_REPO_NAME}}
      USERNAME: ${{secrets.USERNAME}}
      PERSONAL_ACCESS_TOKEN: ${{secrets.PERSONAL_ACCESS_TOKEN}}
      E2E_COMMIT_HASH: ${{secrets.E2E_COMMIT_HASH}}
      GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          cache: "npm"
      - name: Load Node.js modules
        uses: actions/cache@v3
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: Get pull request information (workflow_dispatch)
        if: ${{ github.event_name == 'workflow_dispatch' }}
        uses: octokit/request-action@v2.x
        id: get_pull_request
        with:
          route: GET /repos/{repository}/pulls/{pull_number}
          repository: ${{ github.repository }} # isomerpages/isomercms-frontend
          pull_number: ${{ inputs.issueNumber }}
      - name: Save new environment variables (workflow_dispatch)
        if: ${{ github.event_name == 'workflow_dispatch' }}
        # COMMIT_INFO_MESSAGE: To overwrite commit message sent to Dashboard
        # COMMIT_INFO_SHA: To re-enable PR comment bot for Cypress
        run: |
          echo "COMMIT_INFO_MESSAGE=${{ fromJSON(steps.get_pull_request.outputs.data).title }}" >> $GITHUB_ENV
          echo "COMMIT_INFO_SHA=${{ fromJSON(steps.get_pull_request.outputs.data).head.sha }}" >> $GITHUB_ENV
      - name: Save new environment variables (pull_request)
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          echo "COMMIT_INFO_MESSAGE=${{ github.event.pull_request.title }}" >> $GITHUB_ENV
          echo "COMMIT_INFO_SHA=${{ github.event.pull_request.head.sha }}" >> $GITHUB_ENV
      - name: Install dependencies
        run: npm ci
      - name: Run test ci
        run: npm run test:ci
